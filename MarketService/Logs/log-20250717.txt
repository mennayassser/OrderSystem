2025-07-17 02:15:32 [Information]  Executed DbCommand ("771"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""CREATE DATABASE [MarketDB];"
2025-07-17 02:15:32 [Information]  Executed DbCommand ("332"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [MarketDB] SET READ_COMMITTED_SNAPSHOT ON;
END;"
2025-07-17 02:15:32 [Information]  Executed DbCommand ("5"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""SELECT 1"
2025-07-17 02:15:32 [Information]  Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-17 02:15:32 [Information]  Executed DbCommand ("14"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result"
2025-07-17 02:15:32 [Information]  Executed DbCommand ("9"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;"
2025-07-17 02:15:32 [Information]  Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""SELECT 1"
2025-07-17 02:15:32 [Information]  Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""SELECT OBJECT_ID(N'[__EFMigrationsHistory]');"
2025-07-17 02:15:32 [Information]  Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];"
2025-07-17 02:15:32 [Information]  Applying migration '"20250716085526_InitialCreate"'.
2025-07-17 02:15:32 [Information]  Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""CREATE TABLE [Orders] (
    [OrderId] int NOT NULL IDENTITY,
    [CustomerId] int NOT NULL,
    [CustomerName] nvarchar(max) NOT NULL,
    [Price] int NOT NULL,
    [Direction] nvarchar(max) NOT NULL,
    [Quantity] int NOT NULL,
    [Products] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_Orders] PRIMARY KEY ([OrderId])
);"
2025-07-17 02:15:32 [Information]  Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""CREATE TABLE [Products] (
    [ProductId] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Price] int NOT NULL,
    CONSTRAINT [PK_Products] PRIMARY KEY ([ProductId])
);"
2025-07-17 02:15:32 [Information]  Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250716085526_InitialCreate', N'9.0.7');"
2025-07-17 02:15:32 [Information]  Applying migration '"20250716091916_OrderSystemData"'.
2025-07-17 02:15:32 [Information]  Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250716091916_OrderSystemData', N'9.0.7');"
2025-07-17 02:15:32 [Information]  Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result"
2025-07-17 12:18:47 [Information]  User profile is available. Using '"C:\Users\menna\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-17 12:18:48 [Error]  Hosting failed to start
System.IO.IOException: Failed to bind to address http://[::1]:7092: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted.
 ---> System.Net.Sockets.SocketException (10048): Only one usage of each socket address (protocol/network address/port) is normally permitted.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, Boolean disconnectOnFailure, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(EndPoint endpoint)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass28_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(ListenOptions[] listenOptions, AddressBindContext context, Func`2 useHttps, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
